"""add main tables

Revision ID: 33a1e6eb4dda
Revises: 7445884f3a79
Create Date: 2024-02-23 20:14:19.151496

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '33a1e6eb4dda'
down_revision: Union[str, None] = '7445884f3a79'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pet_type',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('social_network_type',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pet',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('breed', sa.String(), nullable=True),
    sa.Column('blood_type', sa.String(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('vet_passport', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.BigInteger(), nullable=True),
    sa.Column('pet_type_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['pet_type_id'], ['pet_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('social_network',
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('social_network_type_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['social_network_type_id'], ['social_network_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_card',
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('destination_point', sa.String(), nullable=True),
    sa.Column('blood_amount', sa.Integer(), nullable=True),
    sa.Column('active_until', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.BigInteger(), nullable=True),
    sa.Column('recipient_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['pet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unavailable_list',
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=False),
    sa.Column('pet_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vaccination',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('active_until', sa.DateTime(), nullable=True),
    sa.Column('pet_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('donation',
    sa.Column('is_successful', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('search_card_id', sa.BigInteger(), nullable=True),
    sa.Column('donor_pet_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['donor_pet_id'], ['pet.id'], ),
    sa.ForeignKeyConstraint(['search_card_id'], ['search_card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('patronymic', sa.String(), nullable=True))
    op.add_column('user', sa.Column('city', sa.String(), nullable=True))
    op.add_column('user', sa.Column('avatar', sa.String(), nullable=True))
    op.add_column('user', sa.Column('is_email_public', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('phone', sa.String(), nullable=True))
    op.add_column('user', sa.Column('is_email_confirm', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'is_email_confirm')
    op.drop_column('user', 'phone')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'is_email_public')
    op.drop_column('user', 'avatar')
    op.drop_column('user', 'city')
    op.drop_column('user', 'patronymic')
    op.drop_table('donation')
    op.drop_table('vaccination')
    op.drop_table('unavailable_list')
    op.drop_table('search_card')
    op.drop_table('social_network')
    op.drop_table('pet')
    op.drop_table('social_network_type')
    op.drop_table('pet_type')
    # ### end Alembic commands ###
